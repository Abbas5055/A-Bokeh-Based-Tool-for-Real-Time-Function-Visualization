# -*- coding: utf-8 -*-
"""A Bokeh-Based Tool for Real-Time Function Visualization

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zHou-cMPPJP9WKsoQwnKJEN-Xoj3SduJ
"""

!pip install bokeh panel

!pip install panel jupyter_bokeh

!pip install panel jupyter_bokeh
import numpy as np
from bokeh.plotting import figure
from bokeh.models import ColumnDataSource, Select, Slider
import panel as pn
pn.extension('bokeh')
x = np.linspace(0, 10, 100)
source = ColumnDataSource(data={'x': x, 'y': np.sin(x)})
plot = figure(title="Interactive Plot", x_axis_label='X', y_axis_label='Y', width=700, height=400)
plot.line('x', 'y', source=source)
func_select = Select(title="Function", value="Sine", options=["Sine", "Cosine"])
freq_slider = Slider(start=0.5, end=5.0, value=1.0, step=0.1, title="Frequency")
phase_slider = Slider(start=-np.pi, end=np.pi, value=0.0, step=0.1, title="Phase")
amp_slider = Slider(start=0.5, end=2.0, value=1.0, step=0.1, title="Amplitude")
def update(attr, old, new):
    freq = freq_slider.value
    phase = phase_slider.value
    amp = amp_slider.value
    if func_select.value == "Sine":
        y = amp * np.sin(freq * x + phase)
    else:
        y = amp * np.cos(freq * x + phase)
    source.data = {'x': x, 'y': y}
for widget in [func_select, freq_slider, phase_slider, amp_slider]:
    widget.on_change('value', update)
layout = pn.Column(func_select, freq_slider, phase_slider, amp_slider, pn.pane.Bokeh(plot))
layout.servable()